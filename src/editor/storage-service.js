function t(t){const s=t.videos;if(s.length>0&&"string"!=typeof s[0]){const e=s.map((t=>t.videoId));t=Object.assign(Object.assign({},t),{videos:e})}return t}if(window.saveRecentPlaylist=async s=>{localStorage.setItem("playlist_"+s.id,JSON.stringify(t(s)))},window.getRecentPlaylists=async()=>{const t=Object.assign({},localStorage);return Object.keys(t).filter((t=>t.startsWith("playlist_"))).map((s=>JSON.parse(t[s])))},"undefined"!=typeof browser){const s=browser.storage.sync,e="PlaylistIdCounter";window.generatePlaylistId=async()=>{const t=await s.get(e);let i=t[e]||0;return i++,t[e]=i,s.set(t),i},window.savePlaylist=async e=>{const i={};return i["playlist_"+e.id]=JSON.stringify(t(e)),s.set(i)},window.getPlaylists=async()=>{const t=await s.get(null);return Object.keys(t).filter((t=>t.startsWith("playlist_"))).map((s=>JSON.parse(t[s])))}}else window.location.protocol.startsWith("http")&&(window.generatePlaylistId=async()=>Date.now().toString(),window.savePlaylist=window.saveRecentPlaylist,window.getPlaylists=window.getRecentPlaylists);
