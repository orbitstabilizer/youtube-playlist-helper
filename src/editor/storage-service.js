function t(t){const e=Object.assign({},t);return delete e.loadedVideos,e}if(window.saveRecentPlaylist=async e=>(localStorage.setItem("playlist_"+e.id,JSON.stringify(t(e))),e.id),window.getRecentPlaylists=async()=>{const t=Object.assign({},localStorage);return Object.keys(t).filter((t=>t.startsWith("playlist_"))).map((e=>JSON.parse(t[e])))},window.getRecentPlaylist=async t=>{const e=localStorage.getItem("playlist_"+t);return JSON.parse(e)},window.savePlaylist=async e=>{let s=e.id;return e.saved||(s=await window.generatePlaylistId()),e=Object.assign(Object.assign({},e),{id:s,timestamp:Date.now()}),await window.storeObject("playlist_"+s,t(e)),s},window.removePlaylist=async t=>{if(t.saved)return window.removeObject("playlist_"+t.id);localStorage.removeItem("playlist_"+t.id)},window.getPlaylists=async()=>{const t=await window.fetchAllObjects();return Object.keys(t).filter((t=>t.startsWith("playlist_"))).map((e=>{const s=JSON.parse(t[e]);return s.saved=!0,s}))},window.getPlaylist=async t=>{const e=await window.fetchObject("playlist_"+t,null);if(!e)return null;const s=JSON.parse(e);return s.saved=!0,s},"undefined"!=typeof browser){const t=browser.storage.sync;window.fetchObject=async(e,s)=>{const a=await t.get(e);return a&&null!=a[e]?a[e]:s},window.fetchAllObjects=async()=>t.get(null),window.storeObject=async(e,s)=>{const a={};return a[e]=s?JSON.stringify(s):null,t.set(a)},window.removeObject=async e=>t.remove(e);const e="PlaylistIdCounter";window.generatePlaylistId=async()=>{const s=await t.get(e);let a=s[e]||0;return a++,s[e]=a,t.set(s),a}}else window.location.protocol.startsWith("http")&&(window.fetchObject=async(t,e)=>{const s=localStorage.getItem(t);return s&&JSON.parse(s)||e},window.fetchAllObjects=async()=>Object.assign({},localStorage),window.storeObject=async(t,e)=>{localStorage.setItem(t,e?JSON.stringify(e):null)},window.removeObject=async t=>{localStorage.removeItem(t)},window.generatePlaylistId=async()=>Date.now().toString());const e={openPlaylistEditorAfterCreation:!1,openPlaylistPage:!1,closeAfterCombine:!1,disableThumbnails:!1,openPlaylistBuilderAfterAdd:!1,defaultEditorPage:"/recent",createdPlaylistStorage:"recent"};window.getSettings=async()=>{const t=Object.assign({},e);return await Promise.all(Object.keys(e).map((async s=>{const a=await window.fetchObject(s,e[s]);t[s]=a}))),t};
