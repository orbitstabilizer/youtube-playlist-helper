window.videoIdCount=100,window.youtubeRegexPattern=/(?:https?:\/\/)?(?:www\.)?youtu(?:\.be\/|be.com\/\S*(?:watch|embed)(?:(?:(?=\/[-a-zA-Z0-9_]{11,}(?!\S))\/)|(?:\S*v=|v\/)))([-a-zA-Z0-9_]{11,})/.source;window.videoService=new class{constructor(){this.YOUTUBE_URL_PREFIX="https://www.youtube.com/watch?v=",this.THUMBNAIL_URL_PREFIX="https://i.ytimg.com/vi/",this.THUMBNAIL_URL_SUFFIX="/default.jpg",this.youtubeServiceURL="https://www.youtube.com",this.PLAYLIST_LIMIT=50}async fetchVideo(t,e=!1){let i="",o="",s=sessionStorage.getItem(t);if(e||s)s?({title:i,channel:o}=JSON.parse(s)):(i="",o="");else try{const e=await fetch(`https://noembed.com/embed?url=https://www.youtube.com/watch?v=${t}`),s=await e.json();i=s.title,o=s.author_name,sessionStorage.setItem(t,JSON.stringify({title:i,channel:o}))}catch(t){console.log(t)}return{id:window.videoIdCount++,videoId:t,url:this.YOUTUBE_URL_PREFIX+t,title:i,channel:o,thumbnailUrl:this.getVideoThumbnailUrl(t)}}getVideoThumbnailUrl(t){return t?this.THUMBNAIL_URL_PREFIX+t+this.THUMBNAIL_URL_SUFFIX:null}parseYoutubeId(t){const e=RegExp(window.youtubeRegexPattern,"i").exec(t);return e&&e.length>1?e[1]:null}parseYoutubeIds(t){let e,i=[];const o=RegExp(window.youtubeRegexPattern,"ig");for(;e=o.exec(t);)i.push(e[1]);return i}async generatePlaylist(t,e){const i=await window.generatePlaylistId(),o=new Date;return{id:i,title:null!=e?e:o.toLocaleString(),videos:t||[],timestamp:o.getTime()}}openPlaylistEditor(t){const e=location.hash.length>0?location.hash.substring(1):"/";history.pushState({playlist:t,previousPage:e},"","#/editor"),window.dispatchEvent(new Event("hashchange"))}async openPlaylist(t){const e=[...t],i=new Array(Math.ceil(e.length/this.PLAYLIST_LIMIT)).fill().map((t=>e.splice(0,this.PLAYLIST_LIMIT))),o=await window.getSettings();await Promise.all(i.map((async t=>{const e=t.join(",");let i=`${this.youtubeServiceURL}/watch_videos?video_ids=${e}`;const s=await(await fetch(i)).text(),[a,n]=/og:video:url[^>]+\?list=([^"']+)/.exec(s);if(n?o.openPlaylistPage?i=`https://www.youtube.com/playlist?list=${n}`:(i=`https://www.youtube.com/watch?v=${t[0]}&list=${n}`,await Promise.all([fetch(`${this.youtubeServiceURL}/watch?v=${t[0]}&list=${n}`),fetch(`${this.youtubeServiceURL}/watch?v=${t[0]}&list=${n}`)])):o.openPlaylistPage&&alert("Unable to retrieve playlist id. Directly playing videos instead..."),"undefined"!=typeof browser)return browser.tabs.create({url:i});window.open(i,"_blank")})))}};
