window.videoIdCount=100,window.youtubeRegexPattern=/(?:https?:\/\/)?(?:www\.)?youtu(?:\.be\/|be.com\/\S*(?:watch|embed)(?:(?:(?=\/[^&\s\?]+(?!\S))\/)|(?:\S*v=|v\/)))([^&\s\?]+)/.source;window.videoService=new class{constructor(){this.YOUTUBE_URL_PREFIX="https://www.youtube.com/watch?v=",this.THUMBNAIL_URL_PREFIX="https://i.ytimg.com/vi/",this.THUMBNAIL_URL_SUFFIX="/default.jpg",this.youtubeServiceURL="https://www.youtube.com",this.PLAYLIST_LIMIT=50}async fetchVideo(t){var e,i;let o="",n="",a=sessionStorage.getItem(t);if(a)({title:o,channel:n}=JSON.parse(a));else try{const a=await fetch(`${this.youtubeServiceURL}/watch?v=${t}`),r=await a.text();var s=(new DOMParser).parseFromString(r,"text/html");o=(null===(e=s.querySelector("meta[name=title]"))||void 0===e?void 0:e.getAttribute("content"))||"",n=(null===(i=s.querySelector("[itemprop=author] [itemprop=name]"))||void 0===i?void 0:i.getAttribute("content"))||"",sessionStorage.setItem(t,JSON.stringify({title:o,channel:n}))}catch(t){console.log(t)}return{id:window.videoIdCount++,videoId:t,url:this.YOUTUBE_URL_PREFIX+t,title:o,channel:n,thumbnailUrl:this.getVideoThumbnailUrl(t)}}getVideoThumbnailUrl(t){return t?this.THUMBNAIL_URL_PREFIX+t+this.THUMBNAIL_URL_SUFFIX:null}parseYoutubeId(t){const e=RegExp(window.youtubeRegexPattern,"i").exec(t);return e&&e.length>1?e[1]:null}parseYoutubeIds(t){let e,i=[];const o=RegExp(window.youtubeRegexPattern,"ig");for(;e=o.exec(t);)i.push(e[1]);return i}async generatePlaylist(t){const e=await window.generatePlaylistId(),i=new Date;return{id:e,title:i.toLocaleString(),videos:t||[],timestamp:i.getTime()}}openPlaylistEditor(t){const e=location.hash.length>0?location.hash.substring(1):"/";history.pushState({playlist:t,previousPage:e},"","#/editor"),window.dispatchEvent(new Event("hashchange"))}async openPlaylist(t){const e=[...t],i=new Array(Math.ceil(e.length/PLAYLIST_LIMIT)).fill().map((t=>e.splice(0,PLAYLIST_LIMIT))),o=await window.getSettings();await Promise.all(i.map((async t=>{var e=this.youtubeServiceURL+"/watch_videos?video_ids="+t.join(",");if(o.openPlaylistPage){const t=await(await fetch(e)).text(),i=/og:video:url[^>]+\?list=([^"']+)/.exec(t);i&&i.length>1?e="https://www.youtube.com/playlist?list="+i[1]:alert("Unable to retrieve playlist id. Directly playing videos instead...")}if("undefined"!=typeof browser)return browser.tabs.create({url:e});window.open(e,"_blank")})))}};
